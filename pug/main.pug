-
    function formatInput(input, issue, question) {
        if (Array.isArray(input)) {
            return input.map(s => formatString(s, issue, question))
                    .join('<br>&emsp;')
        }
        return formatString(input, issue, question)
    }
    function formatString(s, issue, question) {
        s = handleAsterisks(s, issue, question)
        return s
    }

    function handleAsterisks(s, issue, question) {
        let asterisks = s.match(/\*/g) || [] // Ignoring asterisk that are surrounded by quotes
        if (asterisks.length === 0) {
            return s
        }

        if (asterisks.length % 2 !== 0) {
            console.log(`Uneven number of asterisks in #${issue}, Q:${question}`)
        }
        let tripleAsterisk = s.match(/\*{3}.*?\*{3}/g) || []
        tripleAsterisk.forEach((match) => {
            s = s.replace(match, `<strong><em>${match.substring(3, match.length - 3)}</em></strong>`)
        })
        let doubleAsterisks = s.match(/\*{2}.*?\*{2}/g) || []
        doubleAsterisks.forEach((match) => {
            s = s.replace(match, `<strong>${match.substring(2, match.length - 2)}</strong>`)
        })
        let singleAsterisk = s.match(/\*{1}.*?\*{1}/g) || []
        singleAsterisk.forEach((match) => {
            s = s.replace(match, `<em>${match.substring(1, match.length - 1)}</em>`)
        })
        return s
    }

    function anchorLink(id) {
        const preview = 'https://htmlpreview.github.io/'
        const github = 'https://github.com/DBFBlackbull/adnd-2e-sage-advice/blob/master/html/index.html\n'
        return `${preview}?${github}#${id}`
    }

style.
    body {
        margin: 0;
    }
    body div:nth-child(even) {
        background: lightgray;
    }
    body div:nth-child(odd) {
        background: darkgray;
    }
    div {
        padding: 8px;
    }
    h2 {
        margin-block-end: 0;
    }
    h3 {
        font-weight: normal;
        margin-block-start: 0.2em;
    }

script.
    function copyToClipboard(id) {
        console.log(id);

        // Get the text field
        let element = document.getElementById(id);
        let innerHTML = element.innerHTML;
        innerHTML = innerHTML.replaceAll(/<span class="no-copy">(.|\n)*?<\/span>/g, '');

        // Copy the text inside the text field
        const blob = new Blob([innerHTML], {type: 'text/html'});
        const clipboardItem = new window.ClipboardItem({'text/html': blob});
        navigator.clipboard.write([clipboardItem]);
    }

head
    meta(charset="UTF-8")
span Search
input(type=text)
button test

each magazine, _ in dragonMagazines
    div
        h2 Sage Advice ##{magazine.issue_number}, #{magazine.publication_month} #{magazine.publication_year}
        h3 !{formatInput(magazine.foreword, magazine.issue_number, 'foreword')}
        each advice, index in magazine.sage_advice
            - let questionNumber = index + 1
            - let id = `${magazine.issue_number}-${questionNumber}`
            p(id=id)
                | Sage Advice ##{magazine.issue_number} (#{magazine.publication_month} #{magazine.publication_year}) p. #{advice.page_number}, Question:#{questionNumber}
                span(class="no-copy")
                    button(onclick=`copyToClipboard('${id}')` title="Copy to clipboard") ðŸ“‹
                    | &ensp;
                    a(href=anchorLink(id)) ðŸ”—
                br
                strong !{formatInput(advice.question, magazine.issue_number, questionNumber)}
                br
                span &emsp;!{formatInput(advice.answer, magazine.issue_number, questionNumber)}
                if advice.image
                    span(class="no-copy")
                        if Array.isArray(advice.image)
                            each img, _ in advice.image
                                br
                                img(src="../img/" + img)
                        else
                            br
                            img(src="../img/" + advice.image)